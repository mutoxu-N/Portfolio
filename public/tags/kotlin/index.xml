<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kotlin on mutoxu=N</title><link>http://localhost:1313/Portfolio/tags/kotlin/</link><description>Recent content in Kotlin on mutoxu=N</description><generator>Hugo</generator><language>ja</language><lastBuildDate>Wed, 16 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/Portfolio/tags/kotlin/index.xml" rel="self" type="application/rss+xml"/><item><title>支払い重みに対応した割り勘アプリ「Split」</title><link>http://localhost:1313/Portfolio/posts/split_app/</link><pubDate>Wed, 16 Oct 2024 00:00:00 +0000</pubDate><guid>http://localhost:1313/Portfolio/posts/split_app/</guid><description>&lt;p>&lt;img src="http://localhost:1313/Portfolio/Portfolio/images/posts/split_app/icon.svg" alt="アプリアイコン">&lt;/p>
&lt;h2 id="概要">概要&lt;/h2>
&lt;ul>
&lt;li>「先輩は5%多く払う」&lt;/li>
&lt;li>「飲まない人は半額」&lt;/li>
&lt;/ul>
&lt;p>ような状況に対応するための割り勘アプリ。&lt;/p>
&lt;h2 id="主な機能">主な機能&lt;/h2>
&lt;ul>
&lt;li>ルームごとに支払い情報を管理&lt;/li>
&lt;li>支払い重みで割り勘計算&lt;/li>
&lt;li>1円/10円/100円単位などでの割り勘&lt;/li>
&lt;/ul>
&lt;h2 id="技術">技術&lt;/h2>
&lt;p>アプリの全体のイメージは以下のようになっている。
&lt;img src="http://localhost:1313/Portfolio/Portfolio/images/posts/split_app/split_structure.svg" alt="全体のイメージ図">&lt;/p>
&lt;p>データの管理は&lt;a href="https://firebase.google.com/docs/firestore?hl=ja">Firestore&lt;/a>で行う
&lt;strong>三層アーキテクチャ&lt;/strong>のような構成になっている。
データの書き込みはAPIから行うことで、アプリから直接DBに書き込むことを禁止している。&lt;/p>
&lt;p>FirestoreとAndroidアプリはFirebaseのSDKを利用して、
Firestoreが更新されたときにAndroidアプリ画面上に即座に反映される仕組みになっている。&lt;/p>
&lt;h2 id="プログラム">プログラム&lt;/h2>
&lt;h3 id="android">Android&lt;/h3>
&lt;p>
&lt;a href="https://github.com/mutoxu-N/SplitApp/commits/master/">
 &lt;div class="link-card">
 &lt;div class="link-card-title">Commits · mutoxu-N/SplitApp · GitHub&lt;/div>
 &lt;div class="link-card-hostname">
 
 &lt;div class="link-card-hostname-img">
 &lt;img alt="icon" src="https://github.githubassets.com/favicons/favicon.svg">
 &lt;/div>
 
 &lt;span>github.com&lt;/span>
 &lt;/div>
 &lt;/div>
&lt;/a>
ソースコード: &lt;a href="https://github.com/mutoxu-N/SplitApp">GitHub&lt;/a>&lt;/p>
&lt;h3 id="api">API&lt;/h3>
&lt;p>
&lt;a href="https://github.com/mutoxu-N/SplitAPI">
 &lt;div class="link-card">
 &lt;div class="link-card-title">GitHub - mutoxu-N/SplitAPI&lt;/div>
 &lt;div class="link-card-hostname">
 
 &lt;div class="link-card-hostname-img">
 &lt;img alt="icon" src="https://github.githubassets.com/favicons/favicon.svg">
 &lt;/div>
 
 &lt;span>github.com&lt;/span>
 &lt;/div>
 &lt;/div>
&lt;/a>
ソースコード: &lt;a href="https://github.com/mutoxu-N/SplitAPI">GitHub&lt;/a>&lt;/p></description></item><item><title>RSA電卓</title><link>http://localhost:1313/Portfolio/posts/rsa_app/</link><pubDate>Sun, 21 Jul 2024 00:00:00 +0000</pubDate><guid>http://localhost:1313/Portfolio/posts/rsa_app/</guid><description>&lt;h2 id="概要">概要&lt;/h2>
&lt;p>RSA暗号の暗号化・復号化を計算するための電卓アプリ。
2つの素数を入力し、上段で暗号化、下段で復号化の演算を行っている。&lt;/p>
&lt;p>&lt;img src="http://localhost:1313/Portfolio/Portfolio/images/posts/rsa_app/screen.webp" alt="アプリ画面">&lt;/p>
&lt;h2 id="解説">解説&lt;/h2>
&lt;h3 id="鍵の生成">鍵の生成&lt;/h3>
&lt;p>2つの素数 $p, q$、暗号化したい数値(平文) $m \notin \lbrace p, q \rbrace$ において、
$n$、$\phi(n)$&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>を定義する。&lt;/p>
&lt;p>$$ n = p \cdot q $$
$$ \phi(n) = (p-1)(q-1) $$&lt;/p>
&lt;p>$n, m$ は互いに素なのでオイラーの定理&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>より以下が成り立つ。
$$ m^{\phi(n)} \equiv 1 \quad(\bmod n)$$
$$ m^{\phi(n)+1} \equiv m \quad(\bmod n)$$&lt;/p>
&lt;p>ここで、暗号化鍵(公開鍵) $d$、復号化鍵(秘密鍵) $e$ は以下のように表すことができ、
$d$ を決めると、拡張ユークリッドの互除法&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>を用いて $e$ を求められる。($d,e &amp;gt; 0$)&lt;/p>
&lt;p>$$ d \cdot e \equiv 1 \quad (\bmod\ \phi(n)) $$&lt;/p>
&lt;p>以上より、&lt;/p>
&lt;ul>
&lt;li>公開鍵: $(d, n)$&lt;/li>
&lt;li>秘密鍵: $(e, n)$&lt;/li>
&lt;/ul>
&lt;p>を求められた。&lt;/p></description></item><item><title>深層学習を用いたリバーシAI</title><link>http://localhost:1313/Portfolio/posts/reversi_app/</link><pubDate>Thu, 01 Feb 2024 00:00:00 +0000</pubDate><guid>http://localhost:1313/Portfolio/posts/reversi_app/</guid><description>&lt;h2 id="概要">概要&lt;/h2>
&lt;p>大学の&lt;a href="https://www.chuo-u.ac.jp/gp/collaborate/program/information/">iDSプログラム&lt;/a>で、
Alpha Zeroのアルゴリズムを参考にしたリバーシアプリを作成した。
チームで作成したプロダクトで僕が担当したのは次の要素。&lt;/p>
&lt;ul>
&lt;li>機械学習モデルの実装・学習&lt;/li>
&lt;li>APIの作成&lt;/li>
&lt;li>Androidアプリの作成&lt;/li>
&lt;/ul>
&lt;h2 id="構成">構成&lt;/h2>
&lt;p>簡単な構成は以下の通り。
&lt;img src="http://localhost:1313/Portfolio/Portfolio/images/posts/reversi_app/reversi.png" alt="リバーシアプリの全体図">&lt;/p>
&lt;p>クライアント側から現在の盤面とCPUの手を送信すると、
サーバー側でCPUの手を計算して配置場所を返す仕組み。
Webアプリとしてブラウザ上でプレイすることができ、
同じAPIを使用したAndroidアプリからも
同様にプレイすることができる。&lt;/p>
&lt;h2 id="参考文献">参考文献&lt;/h2>
&lt;p>&lt;a href="https://www.amazon.co.jp/AlphaZero-%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92%E3%83%BB%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%BB%E6%8E%A2%E7%B4%A2-%E4%BA%BA%E5%B7%A5%E7%9F%A5%E8%83%BD%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E5%AE%9F%E8%B7%B5%E5%85%A5%E9%96%80-%E5%B8%83%E7%95%99%E5%B7%9D-%E8%8B%B1%E4%B8%80/dp/4862464505">AlphaZero 深層学習・強化学習・探索 人工知能プログラミング実践入門&lt;/a>&lt;/p></description></item><item><title>電子レンジ温め時間計算アプリ</title><link>http://localhost:1313/Portfolio/posts/microwave_calculator/</link><pubDate>Thu, 06 Apr 2023 00:00:00 +0000</pubDate><guid>http://localhost:1313/Portfolio/posts/microwave_calculator/</guid><description>&lt;p>&lt;img src="http://localhost:1313/Portfolio/Portfolio/images/posts/microwave_calculator/icon.webp" alt="アプリアイコン">&lt;/p>
&lt;h2 id="概要">概要&lt;/h2>
&lt;p>Androidアプリに興味があり、一番はじめに作ったアプリ。
Google Playストアへのリリースを行った。&lt;/p>

&lt;a href="https://play.google.com/store/apps/details?id=com.github.mutoxu_n.MicrowaveCalculator">
 &lt;div class="link-card">
 &lt;div class="link-card-title">Microwave Calculator - Apps on Google Play&lt;/div>
 &lt;div class="link-card-hostname">
 
 &lt;div class="link-card-hostname-img">
 &lt;img alt="icon" src="//www.gstatic.com/android/market_images/web/favicon_v3.ico">
 &lt;/div>
 
 &lt;span>play.google.com&lt;/span>
 &lt;/div>
 &lt;/div>
&lt;/a>
&lt;h2 id="機能">機能&lt;/h2>
&lt;ul>
&lt;li>異なるワット数の温め時間を計算する&lt;/li>
&lt;li>自分の使っているレンジに合わせてワット数を登録できる&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://localhost:1313/Portfolio/Portfolio/images/posts/microwave_calculator/screen.webp" alt="アプリ画面例">&lt;/p>
&lt;h2 id="動機">動機&lt;/h2>
&lt;p>自宅の電子レンジのワット数が730Wのものであり、
長時間の温めが必要な冷凍食品の温め時間が分からないことがあった。
( 短時間だったら適当に調整できるが500W15分とかだと,
730Wで10分くらい&amp;hellip;？」と不安になる )&lt;/p>
&lt;p>そこで、自分の使っているワット数をいくつか登録できるような&lt;strong>温め時間計算アプリ&lt;/strong>が欲しかった。&lt;/p>
&lt;p>下の入力ボックスにワット数を入力し、ワット数ボタンを長押しすると、ボタンに入力されているワット数が登録される。
900Wや1500Wの電子レンジを持っている人も、自分のレンジに合わせてワット数を登録することができる。&lt;/p>
&lt;h2 id="発表">発表&lt;/h2>
&lt;p>株式会社サポーターズ主催 ライトニングトーク大会で発表しました。(2023/4/27)

&lt;a href="https://talent.supporterz.jp/events/65ad84d5-9f88-4149-b752-f37f1682c08d/">
 &lt;div class="link-card">
 &lt;div class="link-card-title">【ライトニングトーク】最近、こんなん創ってます【賞金あり】 / 技育CAMPアカデミア | エンジニア&lt;/div>
 &lt;div class="link-card-hostname">
 
 &lt;div class="link-card-hostname-img">
 &lt;img alt="icon" src="https://talent.supporterz.jp/favicon.ico">
 &lt;/div>
 
 &lt;span>talent.supporterz.jp&lt;/span>
 &lt;/div>
 &lt;/div>
&lt;/a>&lt;/p>
&lt;h2 id="ソースコード">ソースコード&lt;/h2>
&lt;p>
&lt;a href="https://github.com/mutoxu-N/MicrowaveCalculator">
 &lt;div class="link-card">
 &lt;div class="link-card-title">GitHub - mutoxu-N/MicrowaveCalculator: Android app which converts 2 microwave wattage.&lt;/div>
 &lt;div class="link-card-hostname">
 
 &lt;div class="link-card-hostname-img">
 &lt;img alt="icon" src="https://github.githubassets.com/favicons/favicon.svg">
 &lt;/div>
 
 &lt;span>github.com&lt;/span>
 &lt;/div>
 &lt;/div>
&lt;/a>
ソースコード: &lt;a href="https://github.com/mutoxu-N/MicrowaveCalculator">GitHub&lt;/a>&lt;/p></description></item></channel></rss>