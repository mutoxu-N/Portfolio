<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Let's Encrypt on mutoxu=N</title><link>http://localhost:1313/Portfolio/tags/lets-encrypt/</link><description>Recent content in Let's Encrypt on mutoxu=N</description><generator>Hugo</generator><language>ja</language><lastBuildDate>Thu, 04 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/Portfolio/tags/lets-encrypt/index.xml" rel="self" type="application/rss+xml"/><item><title>自鯖に外部からHTTPSアクセスするためのリバースプロキシ</title><link>http://localhost:1313/Portfolio/posts/reverse_proxy/</link><pubDate>Thu, 04 Apr 2024 00:00:00 +0000</pubDate><guid>http://localhost:1313/Portfolio/posts/reverse_proxy/</guid><description>&lt;h2 id="概要">概要&lt;/h2>
&lt;p>&lt;a href="http://localhost:1313/Portfolio/Portfolio/posts/tv_rec/">TV録画サーバー&lt;/a>を外部からアクセスできるようにしたかった。&lt;/p>
&lt;p>しかし、TV放送には著作権があるので、安易にWeb上に公開することはできない。
これに対処するために必要な処置は以下の２つである。(ポート開放はできる前提)&lt;/p>
&lt;ul>
&lt;li>HTTPSによる暗号化&lt;/li>
&lt;li>ログイン認証によるアクセス制限&lt;/li>
&lt;/ul>
&lt;h2 id="nginxの設定">nginxの設定&lt;/h2>
&lt;p>HTTPS化やログイン認証にはサーバーが必要なので、
最低限のnginxサーバーを構築する。
この段階ではリバースプロキシの機能は持っておらず、
証明書発行やログインページの表示などに使用する。&lt;/p>
&lt;p>このnginxはDockerを用いて起動することができる。&lt;/p>
&lt;h2 id="httpsによる暗号化">HTTPSによる暗号化&lt;/h2>
&lt;p>HTTPSの証明書は&lt;a href="https://letsencrypt.org/ja/">Let&amp;rsquo;s Encrypt&lt;/a>を使って発行した。
便利なことに、これもDockerイメージがあるので &lt;code>certbot/certbot&lt;/code> を使って証明書の発行と自動更新を行っている。&lt;/p>
&lt;h2 id="ログイン認証">ログイン認証&lt;/h2>
&lt;h3 id="oauth2">OAuth2&lt;/h3>
&lt;p>限られたユーザーのみがTV録画を閲覧できるように、Googleアカウントによる認証を追加した。
これには、&lt;a href="https://oauth2-proxy.github.io/oauth2-proxy/">OAuth2 Proxy&lt;/a>を使用した。
OAuth2 ProxyもDocker上で動作するため、&lt;code>quay.io/oauth2-proxy/oauth2-proxy&lt;/code> を使用して実行した。&lt;/p>
&lt;p>OAuth2とGoogleの連携は多くの人が解説している通りに行った。&lt;/p>
&lt;h3 id="ホワイトリスト">ホワイトリスト&lt;/h3>
&lt;p>残念ながら、OAuth2を設定しただけでは、
どんなGoogleアカウントを使用してもアクセスできてしまうため、登録されたメールアドレスだけを許容するように設定する。&lt;/p>
&lt;p>以下のような &lt;code>allowmails&lt;/code> というファイルを作成し,
OAuth2のオプションに &lt;code>--authenticated-emails-file=&amp;quot;allowmails&amp;quot;&lt;/code> を追加することで、
そのメールアドレスのGoogleアカウントでログインしたときのみ閲覧することができる設定になる。&lt;/p>
&lt;div class="highlight">&lt;div style="color:#ebdbb2;background-color:#282828;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#ebdbb2;background-color:#282828;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59">1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59">2
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#ebdbb2;background-color:#282828;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>taro@example.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jiro@example.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>saburo@example.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="リバースプロキシ">リバースプロキシ&lt;/h2>
&lt;p>nginxにリバースプロキシ機能を追加する。
これに関してはネット上に情報が溢れているので各自調べてほしいが、
TV録画サーバーにプロキシする際に &lt;code>auth_request /oauth2/auth;&lt;/code> を忘れると一般公開されるので注意しよう。&lt;/p>
&lt;p>このリバースプロキシは汎用的なものなので、TV録画サーバー以外でAPIを公開したいときなどにも使用することができる。&lt;/p></description></item></channel></rss>